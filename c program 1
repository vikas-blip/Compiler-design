#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#define MAX_IDENTIFIER_LENGTH 100
#define MAX_CONSTANT_LENGTH 20

void ignoreWhitespaceAndComments(FILE *fp) {
    char ch;
    while ((ch = fgetc(fp)) != EOF) {
        if (isspace(ch)) {
            continue; // Ignore whitespace
        } else if (ch == '/') {
            char next = fgetc(fp);
            if (next == '/') {
                // Ignore single line comment
                while ((ch = fgetc(fp)) != EOF && ch != '\n');
            } else if (next == '*') {
                // Ignore multi-line comment
                while (1) {
                    ch = fgetc(fp);
                    if (ch == EOF) break;
                    if (ch == '*') {
                        if ((ch = fgetc(fp)) == '/') break; // End of comment
                    }
                }
            } else {
                ungetc(next, fp); // Not a comment, put back the character
                return;
            }
        } else {
            ungetc(ch, fp); // Not whitespace or comment, put back the character
            return;
        }
    }
}

void identifyToken(FILE *fp) {
    char token[MAX_IDENTIFIER_LENGTH];
    int index = 0;
    char ch;

    while ((ch = fgetc(fp)) != EOF) {
        if (isspace(ch)) {
            continue; // Ignore whitespace
        } else if (isalpha(ch) || ch == '_') { // Identifier
            token[index++] = ch;
            while (index < MAX_IDENTIFIER_LENGTH - 1 && (isalnum(ch = fgetc(fp)) || ch == '_')) {
                token[index++] = ch;
            }
            token[index] = '\0';
            ungetc(ch, fp); // Put back the last character
            printf("Identifier: %s\n", token);
            index = 0; // Reset index for next token
        } else if (isdigit(ch)) { // Constant
            token[index++] = ch;
            while (index < MAX_CONSTANT_LENGTH - 1 && isdigit(ch = fgetc(fp))) {
                token[index++] = ch;
            }
            token[index] = '\0';
            ungetc(ch, fp); // Put back the last character
            printf("Constant: %s\n", token);
            index = 0; // Reset index for next token
        } else if (strchr("+-*/=<>!&|", ch)) { // Operators
            printf("Operator: %c\n", ch);
        } else {
            printf("Unknown character: %c\n", ch);
        }
    }
}

int main() {
    FILE *fp = fopen("input.txt", "r");
    if (fp == NULL) {
        fprintf(stderr, "Could not open file\n");
        return 1;
    }

    ignoreWhitespaceAndComments(fp);
    identifyToken(fp);

    fclose(fp);
    return 0;
}
